<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BlogURL" xml:space="preserve">
    <value>http://cnxy.me</value>
  </data>
  <data name="CloseString" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="CommandNotEmpty" xml:space="preserve">
    <value>命令不能为空！</value>
  </data>
  <data name="DetectOK" xml:space="preserve">
    <value>检测成功！</value>
  </data>
  <data name="GithubURL" xml:space="preserve">
    <value>https://github.com/cnxy/VISAInstrument</value>
  </data>
  <data name="LANContainIP" xml:space="preserve">
    <value>LAN地址已经包含该IP，请重新输入！</value>
  </data>
  <data name="LoadingGPIB" xml:space="preserve">
    <value>【正在加载GPIB资源中...请稍候...】</value>
  </data>
  <data name="LoadingInstrumentResource" xml:space="preserve">
    <value>正在加载仪器资源，请等待加载完毕后再关闭此程序！</value>
  </data>
  <data name="LoadingLAN" xml:space="preserve">
    <value>【正在加载LAN资源中...请稍候...】</value>
  </data>
  <data name="LoadingRS232" xml:space="preserve">
    <value>【正在加载RS232资源中...请稍候...】</value>
  </data>
  <data name="LoadingUSB" xml:space="preserve">
    <value>【正在加载USB资源中...请稍候...】</value>
  </data>
  <data name="MutexName" xml:space="preserve">
    <value>VISAInstrument</value>
  </data>
  <data name="NotCorrectIP" xml:space="preserve">
    <value>不是正确的IP地址，请重新输入！</value>
  </data>
  <data name="NotDetectIP" xml:space="preserve">
    <value>没有检测到有效的仪器IP地址，请重新输入！</value>
  </data>
  <data name="OpenString" xml:space="preserve">
    <value>打开</value>
  </data>
  <data name="ReadTimeout" xml:space="preserve">
    <value>读取时间超时</value>
  </data>
  <data name="Running" xml:space="preserve">
    <value>程序已经在运行！</value>
  </data>
  <data name="RuntimeError" xml:space="preserve">
    <value>运行时错误</value>
  </data>
  <data name="VISA32Error" xml:space="preserve">
    <value>加载VISA32错误，请保证已经安装VISA32运行时！</value>
  </data>
  <data name="VISA32URL" xml:space="preserve">
    <value>https://github.com/cnxy/VISAInstrument/releases/download/1.0.0.1/VISAInstrument-1.0.0.1.exe</value>
  </data>
  <data name="VISADownLoad" xml:space="preserve">
    <value>点击“是”从弹出的网址进行下载并安装。</value>
  </data>
</root>